{"name":"Glider","tagline":"Simple, expressive, Promise-based API for interacting with Postgres","body":"# glider [![Build Status](https://travis-ci.org/Innovu/glider.svg?branch=master)](https://travis-ci.org/Innovu/glider) [![Coverage Status](https://coveralls.io/repos/github/Innovu/glider/badge.svg?branch=master)](https://coveralls.io/github/Innovu/glider?branch=master) ![node.js >=0.12](https://img.shields.io/badge/node.js-%3E=0.12-brightgreen.svg)\r\n\r\nSimple, expressive, Promise-based API for interacting with Postgres built on [node-postgres](https://github.com/brianc/node-postgres). Supports node.js 0.12+.\r\n\r\n## Install\r\n\r\n```\r\nnpm install --save glider\r\n```\r\n\r\n## Examples\r\n\r\n### select queries\r\n\r\n```js\r\nvar db = glider(CONNECTION_STRING);\r\ndb.query('select 1::integer as number').then(function(result) {\r\n\treturn result.rows[0].number === 1; // true\r\n});\r\n\r\ndb.select('select 1::integer as number').then(function(result) {\r\n\treturn result[0].number === 1; // true\r\n});\r\n\r\ndb.selectOne('select 1::integer as number').then(function(result) {\r\n\treturn result.number === 1; // true\r\n});\r\n\r\ndb.selectValue('select 1::integer as number').then(function(result) {\r\n\treturn result === 1; // true\r\n});\r\n```\r\n\r\n### insert/update/delete\r\n\r\n```js\r\nvar db = glider(CONNECTION_STRING);\r\ndb.insert('insert into foo values (1, 2, 3), (3, 4, 5)').then(function(result) {\r\n\treturn result.rowCount === 2 && result.command === 'INSERT'; // true\r\n});\r\n\r\ndb.update('update foo set value = 1 where id = 1').then(function(result) {\r\n\treturn result.rowCount === 1 && result.command === 'UPDATE'; // true\r\n});\r\n\r\ndb.delete('delete from foo where id = 2').then(function(result) {\r\n\treturn result.rowCount === 1 && result.command === 'DELETE'; // true\r\n});\r\n```\r\n\r\n### transactions\r\n\r\nIf there's an error in any of the queries in a transaction, `glider` will automatically invoke a `ROLLBACK` and reject the current Promise with the database error.\r\n\r\n```js\r\nvar db = glider(CONNECTION_STRING);\r\ndb\r\n\t.begin()\r\n\t.query('create table foo (id serial, value integer)')\r\n\t.query('insert into foo (value) values (1), (2), (3)')\r\n\t.query('update foo set value = 99 where id = 1')\r\n\t.query('delete from foo where id = 3')\r\n\t.query('select * from foo')\r\n\t.commit()\r\n\t.then(function(results) {\r\n\t\tconsole.log(results[0].command);  // CREATE\r\n\t\tconsole.log(results[1].rowCount); // 3\r\n\t\tconsole.log(results[2].rowCount); // 1\r\n\t\tconsole.log(results[3].rowCount); // 1\r\n\t\tconsole.log(results[4].rows);     // [ { id: 1, value: 99 }, { id: 2, value: 2 } ]\r\n\t});\r\n```\r\n\r\nor with `glider`'s specialized functions...\r\n\r\n```js\r\nvar db = glider(CONNECTION_STRING);\r\ndb\r\n\t.begin()\r\n\t.query('create table foo (id serial, value integer)')\r\n\t.insert('insert into foo (value) values (1), (2), (3)')\r\n\t.update('update foo set value = 99 where id = 1')\r\n\t.delete('delete from foo where id = 3')\r\n\t.select('select * from foo')\r\n\t.selectOne('select value from foo where id = 1')\r\n\t.selectValue('select value from foo where id = 1')\r\n\t.commit()\r\n\t.then(function(results) {\r\n\t\tconsole.log(results[0].command); // CREATE\r\n\t\tconsole.log(results[1]);         // 3\r\n\t\tconsole.log(results[2]);         // 1\r\n\t\tconsole.log(results[3]);         // 1\r\n\t\tconsole.log(results[4]);         // [ { id: 1, value: 99 }, { id: 2, value: 2 } ]\r\n\t\tconsole.log(results[5]);         // { id: 1, value: 99 }\r\n\t\tconsole.log(results[6]);         // 99\r\n\t});\r\n```\r\n\r\n## Testing\r\n\r\n### Prerequisites\r\n\r\n* [vagrant](https://www.vagrantup.com/)\r\n* [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\r\n\r\n### Run tests (mocha + should)\r\n\r\n```\r\nnpm test\r\n```\r\n\r\n### Generate coverage report (istanbul)\r\n\r\nReports are generated in the `./coverage` folder. An HTML-based report can be loaded into the browser from `./coverage/lcov-report/index.html`.\r\n\r\n```\r\nnpm run cover\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}